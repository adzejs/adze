import{_ as e,c as t,o as n,a}from"./app-CocLtHWe.js";const s={},i=a(`<h1 id="unit-testing" tabindex="-1"><a class="header-anchor" href="#unit-testing"><span>Unit Testing</span></a></h1><p>When executing your unit tests you generally do not want to see the internal logging of the code you are testing; rather you only care about the inputs and outputs. To disable logs while executing your unit tests, within your unit test environment you should set the global value <code>$ADZE_ENV = &#39;test&#39;</code>. This tells adze logs to prevent rendering for the sake of unit tests.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// For all environments</span></span>
<span class="line">globalThis<span class="token punctuation">.</span>$<span class="token constant">ADZE_ENV</span> <span class="token operator">=</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="url-parameter-override" tabindex="-1"><a class="header-anchor" href="#url-parameter-override"><span>URL Parameter Override</span></a></h2><p>There may be a time when you are debugging in the browser and would like to set the Adze ENV without changing any code. In this case you can use the reserved <code>ADZE_ENV</code> URL parameter to set it.</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line">http://my-site.com/?ADZE_ENV=test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7),r=[i];function o(l,d){return n(),t("div",null,r)}const u=e(s,[["render",o],["__file","unit-testing.html.vue"]]),h=JSON.parse(`{"path":"/reference/unit-testing.html","title":"Unit Testing","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"URL Parameter Override","slug":"url-parameter-override","link":"#url-parameter-override","children":[]}],"git":{"updatedTime":1726004801000,"contributors":[{"name":"Andrew Stacy","email":"ajstacy@gmail.com","commits":1}]},"filePathRelative":"reference/unit-testing.md","excerpt":"\\n<p>When executing your unit tests you generally do not want to see the internal logging of the code you\\nare testing; rather you only care about the inputs and outputs. To disable logs while executing your\\nunit tests, within your unit test environment you should set the global value <code>$ADZE_ENV = 'test'</code>.\\nThis tells adze logs to prevent rendering for the sake of unit tests.</p>"}`);export{u as comp,h as data};
