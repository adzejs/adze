import{_ as o,c as l,b as n,d as s,e,w as t,a as p,r as i,o as r}from"./app-CocLtHWe.js";const c="/assets/alert-example-browser-DYcP4Yt8.png",u="/assets/alert-example-node-BM5hqOoS.png",d="/assets/error-example-browser-CvufJijv.png",k="/assets/error-example-node-BArODg4E.png",h="/assets/warn-example-browser-DLlwvjcr.png",m="/assets/warn-example-node-DB3N_atQ.png",v="/assets/info-example-browser-BJDHTM0G.png",g="/assets/info-example-node-D3X5ov3V.png",b="/assets/fail-example-browser-CW-2UeU_.png",f="/assets/fail-example-node-CstV6bkw.png",w="/assets/success-example-browser-GDnMHS_7.png",y="/assets/success-example-node-BZci53J4.png",x="/assets/log-example-browser-Cusw0EMT.png",_="/assets/log-example-node-CXbDWTQl.png",j="/assets/debug-example-browser-C9kGCOxL.png",z="/assets/debug-example-node-Dc26Kq4y.png",T="/assets/verbose-example-browser-BBrohTQL.png",S="/assets/verbose-example-node-BinIo_po.png",L="/assets/custom-example-browser-UwGpEOzu.png",B="/assets/custom-example-node-B1tuGTb8.png",A="/assets/seal-example-browser-BLmJb5Ta.png",D="/assets/seal-example-node-B8wRqr41.png",E="/assets/sealTag-example-browser-Cth1abEn.png",I="/assets/sealTag-example-node-qSJ51fjF.png",O="/assets/dump-example-browser-CHg4_66K.png",U="/assets/dump-example-node-D0fp32VZ.png",C={},M=n("h1",{id:"terminators",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#terminators"},[n("span",null,"Terminators")])],-1),W=n("strong",null,"terminators",-1),N=p(`<p>Adze comes with <strong>9</strong> default log level terminators, all of which can be <a href="configuration">configured</a>.</p><table><thead><tr><th>Level</th><th>Name</th><th>Standard Method Used</th></tr></thead><tbody><tr><td>0</td><td><a href="#alert">alert</a></td><td>error</td></tr><tr><td>1</td><td><a href="#error">error</a></td><td>error</td></tr><tr><td>2</td><td><a href="#warn">warn</a></td><td>warn</td></tr><tr><td>3</td><td><a href="#info">info</a></td><td>info</td></tr><tr><td>4</td><td><a href="#fail">fail</a></td><td>info</td></tr><tr><td>5</td><td><a href="#success">success</a></td><td>info</td></tr><tr><td>6</td><td><a href="#log">log</a></td><td>log</td></tr><tr><td>7</td><td><a href="#debug">debug</a></td><td>debug</td></tr><tr><td>8</td><td><a href="#verbose">verbose</a></td><td>debug</td></tr></tbody></table><p>In addition to the default log levels, Adze provides a handful of other special terminators.</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><a href="#clear">clear / clr</a></td><td>An alias for <code>console.clear()</code>.</td></tr><tr><td><a href="#warn">custom</a></td><td>Allows you to generate a log for a custom log level.</td></tr><tr><td><a href="#seal">seal</a></td><td>Allows you to create a child logger by sealing your log chain into a new logger class.</td></tr><tr><td><a href="#sealtag">sealTag</a></td><td>Allows you to create a child logger by sealing your log chain into a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates" target="_blank" rel="noopener noreferrer">template string literal tag function</a>.</td></tr><tr><td><a href="#thread">thread</a></td><td>Creates a context thread that can capture data points throughout multiple scopes of your application.</td></tr></tbody></table><h2 id="level-terminators" tabindex="-1"><a class="header-anchor" href="#level-terminators"><span>Level Terminators</span></a></h2><p>These are the basic level terminators that come with Adze by default.</p><h3 id="alert" tabindex="-1"><a class="header-anchor" href="#alert"><span>alert</span></a></h3><p>This level should only be used for logs that require immediate attention. This should be used sparingly and only for the most critical of errors.</p><p><strong>Default log level</strong> = 0</p><p><strong>Standard Log Method:</strong> <code>console.error()</code></p><p><em>This is not a standard API.</em></p><h4 id="interface" tabindex="-1"><a class="header-anchor" href="#interface"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Something went horribly wrong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Something went horribly wrong!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output" tabindex="-1"><a class="header-anchor" href="#browser-output"><span>Browser Output</span></a></h4><p><img src="`+c+'" alt="alert example browser output"></p><h4 id="server-output" tabindex="-1"><a class="header-anchor" href="#server-output"><span>Server Output</span></a></h4><p><img src="'+u+`" alt="alert example server output"></p><hr><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error</span></a></h3><p>Use this for logging fatal errors or errors that impact functionality of your application.</p><p><strong>Default log level</strong> = 1</p><p><strong>Standard Log Method:</strong> <code>console.error()</code></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/error" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><h4 id="interface-1" tabindex="-1"><a class="header-anchor" href="#interface-1"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;An error occurred!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;An error occurred!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-1" tabindex="-1"><a class="header-anchor" href="#browser-output-1"><span>Browser Output</span></a></h4><p><img src="`+d+'" alt="error example browser output"></p><h4 id="server-output-1" tabindex="-1"><a class="header-anchor" href="#server-output-1"><span>Server Output</span></a></h4><p><img src="'+k+`" alt="error example server output"></p><hr><h3 id="warn" tabindex="-1"><a class="header-anchor" href="#warn"><span>warn</span></a></h3><p>Use this for logging issues that may impact app performance in a less impactful way than an error.</p><p><strong>Default log level</strong> = 2</p><p><strong>Standard Log Method:</strong> <code>console.warn()</code></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/warn" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><h4 id="interface-2" tabindex="-1"><a class="header-anchor" href="#interface-2"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">warn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m warning you!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;I&#39;m warning you!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-2" tabindex="-1"><a class="header-anchor" href="#browser-output-2"><span>Browser Output</span></a></h4><p><img src="`+h+'" alt="warn example browser output"></p><h4 id="server-output-2" tabindex="-1"><a class="header-anchor" href="#server-output-2"><span>Server Output</span></a></h4><p><img src="'+m+`" alt="warn example server output"></p><hr><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info</span></a></h3><p>Use this for logging general insights into your application. This level does not indicate any problems.</p><p><strong>Default log level</strong> = 3</p><p><strong>Standard Log Method:</strong> <code>console.info()</code></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/info" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><h4 id="interface-3" tabindex="-1"><a class="header-anchor" href="#interface-3"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-3" tabindex="-1"><a class="header-anchor" href="#example-3"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;App information&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;App information&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-3" tabindex="-1"><a class="header-anchor" href="#browser-output-3"><span>Browser Output</span></a></h4><p><img src="`+v+'" alt="info example browser output"></p><h4 id="server-output-3" tabindex="-1"><a class="header-anchor" href="#server-output-3"><span>Server Output</span></a></h4><p><img src="'+g+`" alt="info example server output"></p><hr><h3 id="fail" tabindex="-1"><a class="header-anchor" href="#fail"><span>fail</span></a></h3><p>Use this for logging network communication errors or other non-fatal errors that do not break your application.</p><p><strong>Default log level</strong> = 4</p><p><strong>Standard Log Method:</strong> <code>console.info()</code></p><p><em>This is not a standard API.</em></p><h4 id="interface-4" tabindex="-1"><a class="header-anchor" href="#interface-4"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-4" tabindex="-1"><a class="header-anchor" href="#example-4"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&#39;An operation failed to execute!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token string">&#39;An operation failed to execute!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-4" tabindex="-1"><a class="header-anchor" href="#browser-output-4"><span>Browser Output</span></a></h4><p><img src="`+b+'" alt="fail example browser output"></p><h4 id="server-output-4" tabindex="-1"><a class="header-anchor" href="#server-output-4"><span>Server Output</span></a></h4><p><img src="'+f+`" alt="fail example server output"></p><hr><h3 id="success" tabindex="-1"><a class="header-anchor" href="#success"><span>success</span></a></h3><p>Use this for logging successful network communications or other successful operations within your app.</p><p><strong>Default log level</strong> = 5</p><p><strong>Standard Log Method:</strong> <code>console.info()</code></p><p><em>This is not a standard API.</em></p><h4 id="interface-5" tabindex="-1"><a class="header-anchor" href="#interface-5"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-5" tabindex="-1"><a class="header-anchor" href="#example-5"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;An operation was successful!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;An operation was successful!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-5" tabindex="-1"><a class="header-anchor" href="#browser-output-5"><span>Browser Output</span></a></h4><p><img src="`+w+'" alt="success example browser output"></p><h4 id="server-output-5" tabindex="-1"><a class="header-anchor" href="#server-output-5"><span>Server Output</span></a></h4><p><img src="'+y+`" alt="success example server output"></p><hr><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log</span></a></h3><p>Use this for general logging that doesn&#39;t apply to any of the lower levels.</p><p><strong>Default log level</strong> = 6</p><p><strong>Standard Log Method:</strong> <code>console.log()</code></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/log" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><h4 id="interface-6" tabindex="-1"><a class="header-anchor" href="#interface-6"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-6" tabindex="-1"><a class="header-anchor" href="#example-6"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Logging a message.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Logging a message.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-6" tabindex="-1"><a class="header-anchor" href="#browser-output-6"><span>Browser Output</span></a></h4><p><img src="`+x+'" alt="log example browser output"></p><h4 id="server-output-6" tabindex="-1"><a class="header-anchor" href="#server-output-6"><span>Server Output</span></a></h4><p><img src="'+_+`" alt="log example server output"></p><hr><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>debug</span></a></h3><p>Use this for logging information that you typically do not want to see unless you are debugging a problem with your application. This is typically hidden by default.</p><p><strong>Default log level</strong> = 7</p><p><strong>Standard Log Method:</strong> <code>console.debug()</code></p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/debug" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><h4 id="interface-7" tabindex="-1"><a class="header-anchor" href="#interface-7"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">debug</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-7" tabindex="-1"><a class="header-anchor" href="#example-7"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// We need to raise the active log level to see debug logs.</span></span>
<span class="line"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">activeLevel</span><span class="token operator">:</span> <span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&#39;Debugging an issue.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&#39;Debugging an issue.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-7" tabindex="-1"><a class="header-anchor" href="#browser-output-7"><span>Browser Output</span></a></h4><p><img src="`+j+'" alt="debug example browser output"></p><h4 id="server-output-7" tabindex="-1"><a class="header-anchor" href="#server-output-7"><span>Server Output</span></a></h4><p><img src="'+z+`" alt="debug example server output"></p><hr><h3 id="verbose" tabindex="-1"><a class="header-anchor" href="#verbose"><span>verbose</span></a></h3><p>Use this for logging extremely detailed debugging information. Use this level when the values you are logging are granular enough that they are no longer easily human readable.</p><p><strong>Default log level</strong> = 8</p><p><strong>Standard Log Method:</strong> <code>console.debug()</code></p><p><em>This is not a standard API.</em></p><h4 id="interface-8" tabindex="-1"><a class="header-anchor" href="#interface-8"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">verbose</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-8" tabindex="-1"><a class="header-anchor" href="#example-8"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// We need to raise the active log level to see verbose logs.</span></span>
<span class="line"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">activeLevel</span><span class="token operator">:</span> <span class="token string">&#39;verbose&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">verbose</span><span class="token punctuation">(</span><span class="token string">&#39;Logging some extreme detail.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// With emoji&#39;s enabled</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">verbose</span><span class="token punctuation">(</span><span class="token string">&#39;Logging some extreme detail.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-8" tabindex="-1"><a class="header-anchor" href="#browser-output-8"><span>Browser Output</span></a></h4><p><img src="`+T+'" alt="verbose example browser output"></p><h4 id="server-output-8" tabindex="-1"><a class="header-anchor" href="#server-output-8"><span>Server Output</span></a></h4><p><img src="'+S+`" alt="verbose example server output"></p><hr><h2 id="other-terminators" tabindex="-1"><a class="header-anchor" href="#other-terminators"><span>Other Terminators</span></a></h2><p>Aside from the basic <a href="#level-terminators">level terminator</a> methods, Adze also exposes a few others for different utility purposes.</p><h3 id="clear-clr" tabindex="-1"><a class="header-anchor" href="#clear-clr"><span>clear / clr</span></a></h3><p>This terminator simply exists as an alias for <code>console.clear()</code>.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/clear" target="_blank" rel="noopener noreferrer"><strong>MDN Docs</strong></a></p><p><strong>Standard Log Method:</strong> <code>console.clear()</code></p><h4 id="interface-9" tabindex="-1"><a class="header-anchor" href="#interface-9"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">clr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-9" tabindex="-1"><a class="header-anchor" href="#example-9"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log to be cleared.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span> </span></a></h2><h3 id="custom" tabindex="-1"><a class="header-anchor" href="#custom"><span>custom</span></a></h3>`,144),P=n("code",null,"levels",-1),R=n("a",{href:"#seal"},"seal",-1),q=n("a",{href:"#sealTag"},"sealTag",-1),J=p(`<p><em>This is not a standard API.</em></p><h4 id="interface-10" tabindex="-1"><a class="header-anchor" href="#interface-10"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">custom</span><span class="token punctuation">(</span>levelName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-10" tabindex="-1"><a class="header-anchor" href="#example-10"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">levels</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">myLevel</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">levelName</span><span class="token operator">:</span> <span class="token string">&#39;myLevel&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">style</span><span class="token operator">:</span></span>
<span class="line">        <span class="token string">&#39;font-size: 12px; border-radius: 4px; padding-right: 10px; background: linear-gradient(to right, #ffcafc, #ff02f2); color: #fff; border-color: #e3bbbb;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">terminalStyle</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bgMagenta&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">emoji</span><span class="token operator">:</span> <span class="token string">&#39;👾&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string">&#39;myLevel&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;This is my custom log level.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string">&#39;myLevel&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;This is my custom log level with an emoji.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-9" tabindex="-1"><a class="header-anchor" href="#browser-output-9"><span>Browser Output</span></a></h4><p><img src="`+L+'" alt="custom example browser output"></p><h4 id="server-output-9" tabindex="-1"><a class="header-anchor" href="#server-output-9"><span>Server Output</span></a></h4><p><img src="'+B+'" alt="custom example server output"></p><hr><h3 id="seal" tabindex="-1"><a class="header-anchor" href="#seal"><span>seal</span></a></h3><p>The seal terminator is used for creating child loggers.</p>',12),V=p(`<p><em>This is not a standard API.</em></p><h4 id="interface-11" tabindex="-1"><a class="header-anchor" href="#interface-11"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">seal</span><span class="token punctuation">(</span>cfg<span class="token operator">?</span><span class="token operator">:</span> UserConfiguration<span class="token punctuation">)</span><span class="token operator">:</span> SealedLog<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-11" tabindex="-1"><a class="header-anchor" href="#example-11"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> logger <span class="token operator">=</span> adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">ns</span><span class="token punctuation">(</span><span class="token string">&#39;my-app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log from my sealed child logger.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-10" tabindex="-1"><a class="header-anchor" href="#browser-output-10"><span>Browser Output</span></a></h4><p><img src="`+A+'" alt="seal example browser output"></p><h4 id="server-output-10" tabindex="-1"><a class="header-anchor" href="#server-output-10"><span>Server Output</span></a></h4><p><img src="'+D+`" alt="seal example server output"></p><hr><h3 id="sealtag" tabindex="-1"><a class="header-anchor" href="#sealtag"><span>sealTag</span></a></h3><p>The sealTag terminator is used for creating child loggers for a specific log level that can be used as a convenient <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates" target="_blank" rel="noopener noreferrer">string template tag function</a>.</p><p>For instance, if you find yourself logging errors in catch functions repeatedly, you can create an <code>Err</code> template tag function for logging the errors.</p><p><em>This is not a standard API.</em></p><h4 id="interface-12" tabindex="-1"><a class="header-anchor" href="#interface-12"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">sealTag</span><span class="token punctuation">(</span>method<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> cfg<span class="token operator">?</span><span class="token operator">:</span> UserConfiguration<span class="token punctuation">)</span><span class="token operator">:</span> SealedLog<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-12" tabindex="-1"><a class="header-anchor" href="#example-12"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">ERR</span> <span class="token operator">=</span> adze<span class="token punctuation">.</span>withEmoji<span class="token punctuation">.</span><span class="token function">sealTag</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;http://www.example.com/&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token constant">ERR</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failed to fetch from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-11" tabindex="-1"><a class="header-anchor" href="#browser-output-11"><span>Browser Output</span></a></h4><p><img src="`+E+'" alt="sealTag example browser output"></p><h4 id="server-output-11" tabindex="-1"><a class="header-anchor" href="#server-output-11"><span>Server Output</span></a></h4><p><img src="'+I+'" alt="sealTag example server output"></p><hr><h3 id="thread" tabindex="-1"><a class="header-anchor" href="#thread"><span>thread</span></a></h3>',24),G=n("a",{href:"https://www.baeldung.com/mdc-in-log4j-2-logback",target:"_blank",rel:"noopener noreferrer"},"Mapped Diagnostic Context",-1),F=p(`<p><em>This is not a standard API.</em></p><h4 id="interface-13" tabindex="-1"><a class="header-anchor" href="#interface-13"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">BaseLog</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">thread</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-13" tabindex="-1"><a class="header-anchor" href="#example-13"><span>Example</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> answer <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line">  adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;maths&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thread</span><span class="token punctuation">(</span><span class="token string">&#39;added&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> answer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> answer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">subtract</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">x</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> answer <span class="token operator">=</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span></span>
<span class="line">  adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;maths&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">thread</span><span class="token punctuation">(</span><span class="token string">&#39;subtracted&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> answer <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> answer<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;maths&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>dump<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;Results from our thread&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-12" tabindex="-1"><a class="header-anchor" href="#browser-output-12"><span>Browser Output</span></a></h4><p><img src="`+O+'" alt="thread example browser output"></p><h4 id="server-output-12" tabindex="-1"><a class="header-anchor" href="#server-output-12"><span>Server Output</span></a></h4><p><img src="'+U+'" alt="thread example server output"></p>',9);function H(Q,K){const a=i("RouteLink");return r(),l("div",null,[M,n("p",null,[s("When you have an Adze "),e(a,{to:"/reference/log-class.html"},{default:t(()=>[s("log")]),_:1}),s(" instance, and have applied your desired "),e(a,{to:"/reference/modifiers.html"},{default:t(()=>[s("modifiers")]),_:1}),s(", you must terminate the method chain. The methods used to terminate the chain are called "),W,s(".")]),N,n("p",null,[s("Terminates the log at the provided custom log level. Custom log levels are defined within the Adze configuration object under the "),e(a,{to:"/reference/configuration.html#user-configuration"},{default:t(()=>[P]),_:1}),s(" property. Adze can be configured by the "),e(a,{to:"/reference/configuration.html#setup-function"},{default:t(()=>[s("setup")]),_:1}),s(" function or by passing configuration to the "),R,s(" or "),q,s(" terminator.")]),n("p",null,[e(a,{to:"/reference/configuration.html#custom-level-example"},{default:t(()=>[s("Configuration Details")]),_:1})]),J,n("p",null,[s("It allows you to setup your child logger by writing a log chain as you normally would, except that instead of terminating it with a log level, you seal the configuration into a new "),e(a,{to:"/reference/log-class.html"},{default:t(()=>[s("log class")]),_:1}),s(".")]),n("p",null,[s("The new "),e(a,{to:"/reference/log-class.html"},{default:t(()=>[s("log class")]),_:1}),s(" inherits all of the configuration of your log chain.")]),V,n("p",null,[s("The thread terminator is used to create a "),G,s(" where context values are recorded from multiple scopes but are output together in a single log. This is used in conjunction with the "),e(a,{to:"/reference/modifiers.html#dump"},{default:t(()=>[s("dump modifier")]),_:1}),s(" for outputting the thread's values.")]),n("p",null,[s("Refer to "),e(a,{to:"/getting-started/threading.html"},{default:t(()=>[s("threading")]),_:1}),s(" in the Getting Started guide for more information.")]),F])}const Y=o(C,[["render",H],["__file","terminators.html.vue"]]),Z=JSON.parse('{"path":"/reference/terminators.html","title":"Terminators","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Level Terminators","slug":"level-terminators","link":"#level-terminators","children":[{"level":3,"title":"alert","slug":"alert","link":"#alert","children":[]},{"level":3,"title":"error","slug":"error","link":"#error","children":[]},{"level":3,"title":"warn","slug":"warn","link":"#warn","children":[]},{"level":3,"title":"info","slug":"info","link":"#info","children":[]},{"level":3,"title":"fail","slug":"fail","link":"#fail","children":[]},{"level":3,"title":"success","slug":"success","link":"#success","children":[]},{"level":3,"title":"log","slug":"log","link":"#log","children":[]},{"level":3,"title":"debug","slug":"debug","link":"#debug","children":[]},{"level":3,"title":"verbose","slug":"verbose","link":"#verbose","children":[]}]},{"level":2,"title":"Other Terminators","slug":"other-terminators","link":"#other-terminators","children":[{"level":3,"title":"clear / clr","slug":"clear-clr","link":"#clear-clr","children":[]}]},{"level":2,"title":"","slug":"","link":"#","children":[{"level":3,"title":"custom","slug":"custom","link":"#custom","children":[]},{"level":3,"title":"seal","slug":"seal","link":"#seal","children":[]},{"level":3,"title":"sealTag","slug":"sealtag","link":"#sealtag","children":[]},{"level":3,"title":"thread","slug":"thread","link":"#thread","children":[]}]}],"git":{"updatedTime":1726004801000,"contributors":[{"name":"Andrew Stacy","email":"ajstacy@gmail.com","commits":1}]},"filePathRelative":"reference/terminators.md","excerpt":"\\n<p>When you have an Adze <a href=\\"/reference/log-class.html\\" target=\\"_blank\\">log</a> instance, and have applied your desired\\n<a href=\\"/reference/modifiers.html\\" target=\\"_blank\\">modifiers</a>, you must terminate the method chain. The methods used to terminate the\\nchain are called <strong>terminators</strong>.</p>"}');export{Y as comp,Z as data};
