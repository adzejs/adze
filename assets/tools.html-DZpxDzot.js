import{_ as p,c as l,b as n,d as s,e,w as t,a as o,r as c,o as i}from"./app-CocLtHWe.js";const r="/assets/filterByLabel-example-browser-D3bqiGZ8.png",u="/assets/filterByLabel-example-node-BeERiXvq.png",d="/assets/filterByNamespace-example-browser-B79BqPOX.png",k="/assets/filterByNamespace-example-node-BzBLUEpX.png",h="/assets/filterByLevel-example-browser-D3ag7Jqk.png",m="/assets/filterByLevel-example-node-BjdFrMZT.png",v="/assets/renderAll-example-browser-BPlerSDz.png",b="/assets/renderAll-example-node-Dywe7jLW.png",f={},g=n("h1",{id:"tools",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tools"},[n("span",null,"Tools")])],-1),y=n("p",null,"The tools are a collection of methods that allow you to recall cached logs from a console, such as the browser dev tools console. This can be useful if you want to clear the logs and then reprint specific logs to narrow them down.",-1),w=o(`<h2 id="public-methods" tabindex="-1"><a class="header-anchor" href="#public-methods"><span>Public Methods</span></a></h2><p>These are used for retrieving data and accessing the browser console tools.</p><h3 id="filterbylabel" tabindex="-1"><a class="header-anchor" href="#filterbylabel"><span>filterByLabel</span></a></h3><hr><p>Rerenders all logs that match the provided label name.</p><h4 id="interface" tabindex="-1"><a class="header-anchor" href="#interface"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Tools</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">filterByLabel</span><span class="token punctuation">(</span>label<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log that will rerender.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is another log that won&#39;t rerender.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get the log cache.</span></span>
<span class="line">store<span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">filterByLabel</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output" tabindex="-1"><a class="header-anchor" href="#browser-output"><span>Browser Output</span></a></h4><p><img src="`+r+'" alt="filterByLabel tool method example browser output"></p><h4 id="server-output" tabindex="-1"><a class="header-anchor" href="#server-output"><span>Server Output</span></a></h4><p><img src="'+u+`" alt="filterByLabel tool method example server output"></p><h3 id="filterbynamespace" tabindex="-1"><a class="header-anchor" href="#filterbynamespace"><span>filterByNamespace</span></a></h3><hr><p>Rerenders all logs that match the provided namespaces.</p><h4 id="interface-1" tabindex="-1"><a class="header-anchor" href="#interface-1"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Tools</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">filterByNamespace</span><span class="token punctuation">(</span><span class="token operator">...</span>namespace<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">ns</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log that will rerender.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">ns</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is another log that won&#39;t rerender.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get the log cache.</span></span>
<span class="line">store<span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">filterByNamespace</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-1" tabindex="-1"><a class="header-anchor" href="#browser-output-1"><span>Browser Output</span></a></h4><p><img src="`+d+'" alt="filterByNamespace tool method example browser output"></p><h4 id="server-output-1" tabindex="-1"><a class="header-anchor" href="#server-output-1"><span>Server Output</span></a></h4><p><img src="'+k+`" alt="filterByNamespace tool method example server output"></p><h3 id="filterbylevel" tabindex="-1"><a class="header-anchor" href="#filterbylevel"><span>filterByLevel</span></a></h3><hr><p>Rerenders all logs that match the provided level selector.</p><h4 id="interface-2" tabindex="-1"><a class="header-anchor" href="#interface-2"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Tools</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">filterByLevel</span><span class="token punctuation">(</span>level<span class="token operator">:</span> LevelSelector<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log that will rerender.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;This is another log that won&#39;t rerender.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get the log cache.</span></span>
<span class="line">store<span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">filterByLevel</span><span class="token punctuation">(</span><span class="token string">&#39;info&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-2" tabindex="-1"><a class="header-anchor" href="#browser-output-2"><span>Browser Output</span></a></h4><p><img src="`+h+'" alt="filterByLevel tool method example browser output"></p><h4 id="server-output-2" tabindex="-1"><a class="header-anchor" href="#server-output-2"><span>Server Output</span></a></h4><p><img src="'+m+`" alt="filterByLevel tool method example server output"></p><h3 id="renderall" tabindex="-1"><a class="header-anchor" href="#renderall"><span>renderAll</span></a></h3><hr><p>Rerenders all cached logs.</p><h4 id="interface-3" tabindex="-1"><a class="header-anchor" href="#interface-3"><span>Interface</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Tools</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">public</span> <span class="token function">renderAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="example-3" tabindex="-1"><a class="header-anchor" href="#example-3"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  cache<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log that will rerender.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is another log that will rerender.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get the log cache.</span></span>
<span class="line">store<span class="token punctuation">.</span>tools<span class="token punctuation">.</span><span class="token function">renderAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="browser-output-3" tabindex="-1"><a class="header-anchor" href="#browser-output-3"><span>Browser Output</span></a></h4><p><img src="`+v+'" alt="renderAll tool method example browser output"></p><h4 id="server-output-3" tabindex="-1"><a class="header-anchor" href="#server-output-3"><span>Server Output</span></a></h4><p><img src="'+b+'" alt="renderAll tool method example server output"></p>',46);function x(_,B){const a=c("RouteLink");return i(),l("div",null,[g,y,n("p",null,[s("For a detailed tutorial on how to use them, refer to the "),e(a,{to:"/getting-started/tools.html"},{default:t(()=>[s("Tools")]),_:1}),s(" page of the "),e(a,{to:"/getting-started/introduction.html"},{default:t(()=>[s("Getting Started")]),_:1}),s(" guide.")]),w])}const L=p(f,[["render",x],["__file","tools.html.vue"]]),z=JSON.parse('{"path":"/reference/tools.html","title":"Tools","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Public Methods","slug":"public-methods","link":"#public-methods","children":[{"level":3,"title":"filterByLabel","slug":"filterbylabel","link":"#filterbylabel","children":[]},{"level":3,"title":"filterByNamespace","slug":"filterbynamespace","link":"#filterbynamespace","children":[]},{"level":3,"title":"filterByLevel","slug":"filterbylevel","link":"#filterbylevel","children":[]},{"level":3,"title":"renderAll","slug":"renderall","link":"#renderall","children":[]}]}],"git":{"updatedTime":1726004801000,"contributors":[{"name":"Andrew Stacy","email":"ajstacy@gmail.com","commits":1}]},"filePathRelative":"reference/tools.md","excerpt":"\\n<p>The tools are a collection of methods that allow you to recall cached logs from a console, such as\\nthe browser dev tools console. This can be useful if you want to clear the logs and then reprint\\nspecific logs to narrow them down.</p>\\n<p>For a detailed tutorial on how to use them, refer to the <a href=\\"/getting-started/tools.html\\" target=\\"_blank\\">Tools</a> page\\nof the <a href=\\"/getting-started/introduction.html\\" target=\\"_blank\\">Getting Started</a> guide.</p>"}');export{L as comp,z as data};
