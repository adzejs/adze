import{_ as l,c as o,b as s,d as n,e,w as t,a as p,r as i,o as c}from"./app-BSViwGMH.js";const r={},u=s("h1",{id:"migrating-from-adze-v1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#migrating-from-adze-v1"},[s("span",null,"Migrating from Adze v1")])],-1),d=s("p",null,[n("If you were previously using "),s("a",{href:"https://adzejs.com/v1/",target:"_blank",rel:"noopener noreferrer"},"v1.x"),n(" of Adze, migration should be fairly straightforward. Only a few of the original API's changed and you should be able to resolve them for the most part with a find and replace in your project.")],-1),k=s("p",null,"Here's what has changed:",-1),m=s("code",null,"adze().",-1),h=s("code",null,"adze.",-1),v=s("code",null,"createShed",-1),g=s("code",null,"createShed",-1),b=s("code",null,"setup",-1),f=s("code",null,"$adzeGlobal",-1),y=s("li",null,[n("The "),s("a",{href:"https://adzejs.com/v1/guide/filtering-and-utility-functions.html#filtercollection",target:"_blank",rel:"noopener noreferrer"},"Filtering and Utility"),n(" functions have been removed.")],-1),w=s("li",null,[s("a",{href:"https://adzejs.com/v1/guide/factories.html#bundle",target:"_blank",rel:"noopener noreferrer"},"Bundling"),n(" has been removed.")],-1),x=p(`<div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Some items may have been missed. Please open an <a href="https://github.com/adzejs/adze/issues" target="_blank" rel="noopener noreferrer">issue</a> if any other differences are discovered and we will get them documented.</p></div><h2 id="adze-factory-changes" tabindex="-1"><a class="header-anchor" href="#adze-factory-changes"><span>Adze Factory Changes</span></a></h2><p><code>adze().</code> is now just <code>adze.</code></p><h4 id="v1-example" tabindex="-1"><a class="header-anchor" href="#v1-example"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">adze</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example" tabindex="-1"><a class="header-anchor" href="#v2-example"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sealing-changes" tabindex="-1"><a class="header-anchor" href="#sealing-changes"><span>Sealing Changes</span></a></h2>`,8),_=p(`<h4 id="v1-example-1" tabindex="-1"><a class="header-anchor" href="#v1-example-1"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> logger <span class="token operator">=</span> <span class="token function">adze</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>timestamp<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log with a timestamp.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example-1" tabindex="-1"><a class="header-anchor" href="#v2-example-1"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> logger <span class="token operator">=</span> adze<span class="token punctuation">.</span>timestamp<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">logger<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;This is a log with a timestamp.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="calling-createshed-not-required" tabindex="-1"><a class="header-anchor" href="#calling-createshed-not-required"><span>Calling createShed Not Required</span></a></h2><p>Calling <code>createShed</code> is no longer required for any functionality like labels, count, etc.</p><h4 id="v1-example-2" tabindex="-1"><a class="header-anchor" href="#v1-example-2"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">adze</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;blah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Counter log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">adze</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;blah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Counter log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;- count not increased</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example-2" tabindex="-1"><a class="header-anchor" href="#v2-example-2"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;blah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Counter log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">adze<span class="token punctuation">.</span><span class="token function">label</span><span class="token punctuation">(</span><span class="token string">&#39;blah&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Counter log.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;- count is increased</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createshed-replaced-with-setup" tabindex="-1"><a class="header-anchor" href="#createshed-replaced-with-setup"><span>createShed replaced with setup</span></a></h2>`,11),z=s("code",null,"createShed",-1),C=s("code",null,"setup",-1),j=p(`<h4 id="v1-example-3" tabindex="-1"><a class="header-anchor" href="#v1-example-3"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> createShed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> shed <span class="token operator">=</span> <span class="token function">createShed</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  globalCfg<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// overrides here</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">shed<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> render<span class="token punctuation">,</span> printed<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// do stuff...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example-3" tabindex="-1"><a class="header-anchor" href="#v2-example-3"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// overrides here</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">store<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>log<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// do stuff...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="global-context-is-now-adzeglobal" tabindex="-1"><a class="header-anchor" href="#global-context-is-now-adzeglobal"><span>Global Context is Now $adzeGlobal</span></a></h2>`,5),S=s("code",null,"$adzeGlobal",-1),L=s("code",null,"$shed",-1),E=p(`<h4 id="v1-example-4" tabindex="-1"><a class="header-anchor" href="#v1-example-4"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> createShed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> shed <span class="token operator">=</span> <span class="token function">createShed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// Old context was named $shed</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Context&#39;</span><span class="token punctuation">,</span> global<span class="token punctuation">.</span>$shed<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example-4" tabindex="-1"><a class="header-anchor" href="#v2-example-4"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> adze<span class="token punctuation">,</span> <span class="token punctuation">{</span> setup <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;adze&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// New context is named $adzeGlobal</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Context&#39;</span><span class="token punctuation">,</span> globalThis<span class="token punctuation">.</span>$adzeGlobal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configuration-has-new-schema" tabindex="-1"><a class="header-anchor" href="#configuration-has-new-schema"><span>Configuration Has New Schema</span></a></h2>`,5),N=p(`<h4 id="v1-example-5" tabindex="-1"><a class="header-anchor" href="#v1-example-5"><span>v1 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">Configuration</span> <span class="token punctuation">{</span></span>
<span class="line">  logLevel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  useEmoji<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  unstyled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  terminalColorFidelity<span class="token operator">?</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line">  captureStacktrace<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  machineReadable<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  baseStyle<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  logLevels<span class="token operator">?</span><span class="token operator">:</span> LogLevels<span class="token punctuation">;</span></span>
<span class="line">  customLevels<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>LogLevels<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  meta<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  filters<span class="token operator">?</span><span class="token operator">:</span> AdzeFilters<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="v2-example-5" tabindex="-1"><a class="header-anchor" href="#v2-example-5"><span>v2 Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">UserConfiguration</span> <span class="token punctuation">{</span></span>
<span class="line">  activeLevel<span class="token operator">?</span><span class="token operator">:</span> Level <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  cache<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  cacheSize<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  dump<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  filters<span class="token operator">?</span><span class="token operator">:</span> Filters<span class="token punctuation">;</span></span>
<span class="line">  format<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  formatters<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> FormatterConstructor<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  levels<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> LevelConfig<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  meta<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  middleware<span class="token operator">?</span><span class="token operator">:</span> Middleware<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  silent<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  showTimestamp<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line">  timestampFormatter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>date<span class="token operator">:</span> Date<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  withEmoji<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">Level</span> <span class="token operator">=</span> <span class="token string">&#39;alert&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;error&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;info&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;fail&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;success&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;log&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;debug&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;verbose&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function T(A,R){const a=i("RouteLink");return c(),o("div",null,[u,d,k,s("ul",null,[s("li",null,[m,n(" is now just "),h,s("ul",null,[s("li",null,[n("Calling "),e(a,{to:"/reference/terminators.html#seal"},{default:t(()=>[n("seal")]),_:1}),n(" returns a class with static methods as well.")])])]),s("li",null,[n("Calling "),v,n(" is no longer required for any functionality. "),s("ul",null,[s("li",null,[g,n(" has been replaced with the "),e(a,{to:"/reference/configuration.html#setup-function"},{default:t(()=>[b,n(" function")]),_:1}),n(".")]),s("li",null,[n("The "),e(a,{to:"/getting-started/global-store.html"},{default:t(()=>[n("global context")]),_:1}),n(" is now named "),f])])]),s("li",null,[e(a,{to:"/reference/global-store.html#addlistener"},{default:t(()=>[n("Log listeners")]),_:1}),n(" now only receive the log instance.")]),s("li",null,[n("The configuration object now has a "),e(a,{to:"/reference/configuration.html"},{default:t(()=>[n("new configuration schema")]),_:1}),n(".")]),y,w]),x,s("p",null,[n("Calling "),e(a,{to:"/reference/terminators.html#seal"},{default:t(()=>[n("seal")]),_:1}),n(" returns a class with static methods as well.")]),_,s("p",null,[z,n(" has been replaced with the "),e(a,{to:"/reference/configuration.html#setup-function"},{default:t(()=>[C,n(" function")]),_:1}),n(".")]),s("p",null,[e(a,{to:"/reference/global-store.html#addlistener"},{default:t(()=>[n("Log listeners")]),_:1}),n(" now only receive the log instance.")]),j,s("p",null,[n("The "),e(a,{to:"/getting-started/global-store.html"},{default:t(()=>[n("global context")]),_:1}),n(" is now named "),S,n(" instead of "),L,n(".")]),E,s("p",null,[n("The configuration object now has a "),e(a,{to:"/reference/configuration.html"},{default:t(()=>[n("new configuration schema")]),_:1}),n(".")]),N])}const $=l(r,[["render",T],["__file","migrating.html.vue"]]),q=JSON.parse(`{"path":"/getting-started/migrating.html","title":"Migrating from Adze v1","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Adze Factory Changes","slug":"adze-factory-changes","link":"#adze-factory-changes","children":[]},{"level":2,"title":"Sealing Changes","slug":"sealing-changes","link":"#sealing-changes","children":[]},{"level":2,"title":"Calling createShed Not Required","slug":"calling-createshed-not-required","link":"#calling-createshed-not-required","children":[]},{"level":2,"title":"createShed replaced with setup","slug":"createshed-replaced-with-setup","link":"#createshed-replaced-with-setup","children":[]},{"level":2,"title":"Global Context is Now $adzeGlobal","slug":"global-context-is-now-adzeglobal","link":"#global-context-is-now-adzeglobal","children":[]},{"level":2,"title":"Configuration Has New Schema","slug":"configuration-has-new-schema","link":"#configuration-has-new-schema","children":[]}],"git":{"updatedTime":1726004801000,"contributors":[{"name":"Andrew Stacy","email":"ajstacy@gmail.com","commits":1}]},"filePathRelative":"getting-started/migrating.md","excerpt":"\\n<p>If you were previously using <a href=\\"https://adzejs.com/v1/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">v1.x</a> of Adze, migration should be fairly\\nstraightforward. Only a few of the original API's changed and you should be able to resolve them for\\nthe most part with a find and replace in your project.</p>"}`);export{$ as comp,q as data};
